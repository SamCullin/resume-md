name: Publish Python Package

on: push

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/exec
      - name: Setup Git User
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          semantic-release --branches main

  build:
    name: Build distribution ðŸ“¦
    needs: semantic-release
    if: ${{ needs.semantic-release.outputs.new_release_published == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build distributions
      run: python -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/resume-md

    permissions:
      id-token: write  # Required for trusted publishing

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the distributions with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ needs.semantic-release.outputs.new_release_version }}
      run: >-
        gh release create
        "v$VERSION"
        --repo "$GITHUB_REPOSITORY"
        --notes "Release v$VERSION"
    - name: Upload artifacts to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{ needs.semantic-release.outputs.new_release_version }}
      run: >-
        gh release upload
        "v$VERSION" dist/**
        --repo "$GITHUB_REPOSITORY" 